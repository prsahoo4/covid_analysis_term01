<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook original-version='18.1' source-build='2021.4.4 (20214.22.0213.1102)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Percent Of Smokers Parameter' datatype='real' name='[Percent Of Smokers Parameter]' param-domain-type='range' role='measure' type='quantitative' value='1.2984490208000001'>
        <calculation class='tableau' formula='1.2984490208000001' />
        <range granularity='1.2984490208000001' max='6.4922451040000002' min='1.2984490208000001' />
      </column>
    </datasource>
    <datasource caption='imputed-data' inline='true' name='federated.0ac998u1tqfv3o162z9r70hm1664' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='imputed-data' name='textscan.05r8y4s14g52vc178yfaa1vro3z7'>
            <connection class='textscan' directory='D:/workstation/Langara Course/DANA 4800-01/project/covid analysis/dataset' filename='imputed-data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.05r8y4s14g52vc178yfaa1vro3z7' name='imputed-data.csv' table='[imputed-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='integer' name='county_fips' ordinal='1' />
            <column datatype='string' name='county_name' ordinal='2' />
            <column datatype='integer' name='state_fips' ordinal='3' />
            <column datatype='string' name='state_name' ordinal='4' />
            <column datatype='real' name='covid_19_confirmed_cases' ordinal='5' />
            <column datatype='real' name='covid_19_deaths' ordinal='6' />
            <column datatype='string' name='social_distancing_total_grade' ordinal='7' />
            <column datatype='string' name='social_distancing_visitation_grade' ordinal='8' />
            <column datatype='string' name='social_distancing_encounters_grade' ordinal='9' />
            <column datatype='string' name='social_distancing_travel_distance_grade' ordinal='10' />
            <column datatype='real' name='retail_and_recreation_mobility_percent_change' ordinal='11' />
            <column datatype='real' name='grocery_and_pharmacy_mobility_percent_change' ordinal='12' />
            <column datatype='real' name='workplaces_mobility_percent_change' ordinal='13' />
            <column datatype='real' name='daily_state_test' ordinal='14' />
            <column datatype='real' name='precipitation' ordinal='15' />
            <column datatype='real' name='temperature' ordinal='16' />
            <column datatype='real' name='percent_of_vaccinated_residents' ordinal='17' />
            <column datatype='real' name='virus_pressure' ordinal='18' />
            <column datatype='integer' name='total_population' ordinal='19' />
            <column datatype='real' name='proportion_female' ordinal='20' />
            <column datatype='real' name='area' ordinal='21' />
            <column datatype='real' name='population_density' ordinal='22' />
            <column datatype='real' name='latitude' ordinal='23' />
            <column datatype='real' name='longitude' ordinal='24' />
            <column datatype='real' name='hospital_beds_ratio' ordinal='25' />
            <column datatype='real' name='ventilator_capacity_ratio' ordinal='26' />
            <column datatype='real' name='intensive_care_unit_(ICU)_bed_ratio' ordinal='27' />
            <column datatype='real' name='housing_density' ordinal='28' />
            <column datatype='real' name='less_than_high_school_diploma' ordinal='29' />
            <column datatype='real' name='high_school_diploma_only' ordinal='30' />
            <column datatype='real' name='some_college_or_higher' ordinal='31' />
            <column datatype='real' name='academic_population_ratio' ordinal='32' />
            <column datatype='real' name='percent_of_smokers' ordinal='33' />
            <column datatype='real' name='percent_of_diabetes' ordinal='34' />
            <column datatype='real' name='religious_congregation_ratio' ordinal='35' />
            <column datatype='integer' name='political_party' ordinal='36' />
            <column datatype='real' name='airport_distance' ordinal='37' />
            <column datatype='real' name='passenger_load_ratio' ordinal='38' />
            <column datatype='integer' name='number_of_meat_plants' ordinal='39' />
            <column datatype='integer' name='median_household_income' ordinal='40' />
            <column datatype='real' name='percent_of_insured_residents' ordinal='41' />
            <column datatype='real' name='gdp_per_capita' ordinal='42' />
            <column datatype='integer' name='age_0_4' ordinal='43' />
            <column datatype='integer' name='age_5_9' ordinal='44' />
            <column datatype='integer' name='age_10_14' ordinal='45' />
            <column datatype='integer' name='age_15_19' ordinal='46' />
            <column datatype='integer' name='age_20_24' ordinal='47' />
            <column datatype='integer' name='age_25_29' ordinal='48' />
            <column datatype='integer' name='age_30_34' ordinal='49' />
            <column datatype='integer' name='age_35_39' ordinal='50' />
            <column datatype='integer' name='age_40_44' ordinal='51' />
            <column datatype='integer' name='age_45_49' ordinal='52' />
            <column datatype='integer' name='age_50_54' ordinal='53' />
            <column datatype='integer' name='age_55_59' ordinal='54' />
            <column datatype='integer' name='age_60_64' ordinal='55' />
            <column datatype='integer' name='age_65_69' ordinal='56' />
            <column datatype='integer' name='age_70_74' ordinal='57' />
            <column datatype='integer' name='age_75_79' ordinal='58' />
            <column datatype='integer' name='age_80_84' ordinal='59' />
            <column datatype='integer' name='age_85_or_higher' ordinal='60' />
            <column datatype='real' name='immigrant_student_ratio' ordinal='61' />
            <column datatype='real' name='death_ratio' ordinal='62' />
            <column datatype='real' name='population_ratio_in_state' ordinal='63' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.05r8y4s14g52vc178yfaa1vro3z7' name='imputed-data.csv' table='[imputed-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='integer' name='county_fips' ordinal='1' />
            <column datatype='string' name='county_name' ordinal='2' />
            <column datatype='integer' name='state_fips' ordinal='3' />
            <column datatype='string' name='state_name' ordinal='4' />
            <column datatype='real' name='covid_19_confirmed_cases' ordinal='5' />
            <column datatype='real' name='covid_19_deaths' ordinal='6' />
            <column datatype='string' name='social_distancing_total_grade' ordinal='7' />
            <column datatype='string' name='social_distancing_visitation_grade' ordinal='8' />
            <column datatype='string' name='social_distancing_encounters_grade' ordinal='9' />
            <column datatype='string' name='social_distancing_travel_distance_grade' ordinal='10' />
            <column datatype='real' name='retail_and_recreation_mobility_percent_change' ordinal='11' />
            <column datatype='real' name='grocery_and_pharmacy_mobility_percent_change' ordinal='12' />
            <column datatype='real' name='workplaces_mobility_percent_change' ordinal='13' />
            <column datatype='real' name='daily_state_test' ordinal='14' />
            <column datatype='real' name='precipitation' ordinal='15' />
            <column datatype='real' name='temperature' ordinal='16' />
            <column datatype='real' name='percent_of_vaccinated_residents' ordinal='17' />
            <column datatype='real' name='virus_pressure' ordinal='18' />
            <column datatype='integer' name='total_population' ordinal='19' />
            <column datatype='real' name='proportion_female' ordinal='20' />
            <column datatype='real' name='area' ordinal='21' />
            <column datatype='real' name='population_density' ordinal='22' />
            <column datatype='real' name='latitude' ordinal='23' />
            <column datatype='real' name='longitude' ordinal='24' />
            <column datatype='real' name='hospital_beds_ratio' ordinal='25' />
            <column datatype='real' name='ventilator_capacity_ratio' ordinal='26' />
            <column datatype='real' name='intensive_care_unit_(ICU)_bed_ratio' ordinal='27' />
            <column datatype='real' name='housing_density' ordinal='28' />
            <column datatype='real' name='less_than_high_school_diploma' ordinal='29' />
            <column datatype='real' name='high_school_diploma_only' ordinal='30' />
            <column datatype='real' name='some_college_or_higher' ordinal='31' />
            <column datatype='real' name='academic_population_ratio' ordinal='32' />
            <column datatype='real' name='percent_of_smokers' ordinal='33' />
            <column datatype='real' name='percent_of_diabetes' ordinal='34' />
            <column datatype='real' name='religious_congregation_ratio' ordinal='35' />
            <column datatype='integer' name='political_party' ordinal='36' />
            <column datatype='real' name='airport_distance' ordinal='37' />
            <column datatype='real' name='passenger_load_ratio' ordinal='38' />
            <column datatype='integer' name='number_of_meat_plants' ordinal='39' />
            <column datatype='integer' name='median_household_income' ordinal='40' />
            <column datatype='real' name='percent_of_insured_residents' ordinal='41' />
            <column datatype='real' name='gdp_per_capita' ordinal='42' />
            <column datatype='integer' name='age_0_4' ordinal='43' />
            <column datatype='integer' name='age_5_9' ordinal='44' />
            <column datatype='integer' name='age_10_14' ordinal='45' />
            <column datatype='integer' name='age_15_19' ordinal='46' />
            <column datatype='integer' name='age_20_24' ordinal='47' />
            <column datatype='integer' name='age_25_29' ordinal='48' />
            <column datatype='integer' name='age_30_34' ordinal='49' />
            <column datatype='integer' name='age_35_39' ordinal='50' />
            <column datatype='integer' name='age_40_44' ordinal='51' />
            <column datatype='integer' name='age_45_49' ordinal='52' />
            <column datatype='integer' name='age_50_54' ordinal='53' />
            <column datatype='integer' name='age_55_59' ordinal='54' />
            <column datatype='integer' name='age_60_64' ordinal='55' />
            <column datatype='integer' name='age_65_69' ordinal='56' />
            <column datatype='integer' name='age_70_74' ordinal='57' />
            <column datatype='integer' name='age_75_79' ordinal='58' />
            <column datatype='integer' name='age_80_84' ordinal='59' />
            <column datatype='integer' name='age_85_or_higher' ordinal='60' />
            <column datatype='real' name='immigrant_student_ratio' ordinal='61' />
            <column datatype='real' name='death_ratio' ordinal='62' />
            <column datatype='real' name='population_ratio_in_state' ordinal='63' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[county_fips]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>county_fips</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[state_fips]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>state_fips</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_name]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>state_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>covid_19_confirmed_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[covid_19_confirmed_cases]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>covid_19_confirmed_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>covid_19_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[covid_19_deaths]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>covid_19_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>social_distancing_total_grade</remote-name>
            <remote-type>129</remote-type>
            <local-name>[social_distancing_total_grade]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>social_distancing_total_grade</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>social_distancing_visitation_grade</remote-name>
            <remote-type>129</remote-type>
            <local-name>[social_distancing_visitation_grade]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>social_distancing_visitation_grade</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>social_distancing_encounters_grade</remote-name>
            <remote-type>129</remote-type>
            <local-name>[social_distancing_encounters_grade]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>social_distancing_encounters_grade</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>social_distancing_travel_distance_grade</remote-name>
            <remote-type>129</remote-type>
            <local-name>[social_distancing_travel_distance_grade]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>social_distancing_travel_distance_grade</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>retail_and_recreation_mobility_percent_change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[retail_and_recreation_mobility_percent_change]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>retail_and_recreation_mobility_percent_change</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grocery_and_pharmacy_mobility_percent_change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[grocery_and_pharmacy_mobility_percent_change]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>grocery_and_pharmacy_mobility_percent_change</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>workplaces_mobility_percent_change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[workplaces_mobility_percent_change]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>workplaces_mobility_percent_change</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_state_test</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_state_test]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>daily_state_test</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>precipitation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[precipitation]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>precipitation</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>temperature</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_of_vaccinated_residents</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent_of_vaccinated_residents]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>percent_of_vaccinated_residents</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>virus_pressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[virus_pressure]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>virus_pressure</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_population]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>total_population</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>proportion_female</remote-name>
            <remote-type>5</remote-type>
            <local-name>[proportion_female]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>proportion_female</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area</remote-name>
            <remote-type>5</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>area</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_ratio]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>hospital_beds_ratio</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ventilator_capacity_ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ventilator_capacity_ratio]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>ventilator_capacity_ratio</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>intensive_care_unit_(ICU)_bed_ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[intensive_care_unit_(ICU)_bed_ratio]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>intensive_care_unit_(ICU)_bed_ratio</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>housing_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[housing_density]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>housing_density</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>less_than_high_school_diploma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[less_than_high_school_diploma]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>less_than_high_school_diploma</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>high_school_diploma_only</remote-name>
            <remote-type>5</remote-type>
            <local-name>[high_school_diploma_only]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>high_school_diploma_only</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>some_college_or_higher</remote-name>
            <remote-type>5</remote-type>
            <local-name>[some_college_or_higher]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>some_college_or_higher</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>academic_population_ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[academic_population_ratio]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>academic_population_ratio</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_of_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent_of_smokers]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>percent_of_smokers</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_of_diabetes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent_of_diabetes]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>percent_of_diabetes</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>religious_congregation_ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[religious_congregation_ratio]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>religious_congregation_ratio</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>political_party</remote-name>
            <remote-type>20</remote-type>
            <local-name>[political_party]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>political_party</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport_distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[airport_distance]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>airport_distance</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger_load_ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[passenger_load_ratio]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>passenger_load_ratio</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_meat_plants</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number_of_meat_plants]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>number_of_meat_plants</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_household_income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[median_household_income]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>median_household_income</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_of_insured_residents</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent_of_insured_residents]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>percent_of_insured_residents</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_0_4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age_0_4]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>age_0_4</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_5_9</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age_5_9]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>age_5_9</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_10_14</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age_10_14]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>age_10_14</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_15_19</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age_15_19]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>age_15_19</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_20_24</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age_20_24]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>age_20_24</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_25_29</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age_25_29]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>age_25_29</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_30_34</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age_30_34]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>age_30_34</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_35_39</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age_35_39]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>age_35_39</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_40_44</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age_40_44]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>age_40_44</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_45_49</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age_45_49]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>age_45_49</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_50_54</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age_50_54]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>age_50_54</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_55_59</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age_55_59]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>age_55_59</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_60_64</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age_60_64]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>age_60_64</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_65_69</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age_65_69]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>age_65_69</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_70_74</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age_70_74]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>age_70_74</remote-alias>
            <ordinal>57</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_75_79</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age_75_79]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>age_75_79</remote-alias>
            <ordinal>58</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_80_84</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age_80_84]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>age_80_84</remote-alias>
            <ordinal>59</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_85_or_higher</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age_85_or_higher]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>age_85_or_higher</remote-alias>
            <ordinal>60</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>immigrant_student_ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[immigrant_student_ratio]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>immigrant_student_ratio</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death_ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death_ratio]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>death_ratio</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_ratio_in_state</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_ratio_in_state]</local-name>
            <parent-name>[imputed-data.csv]</parent-name>
            <remote-alias>population_ratio_in_state</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='death_number' datatype='real' name='[Calculation_1104507828801159168]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[death_ratio]*[total_population]' />
      </column>
      <column caption='covid_19_deaths_number' datatype='real' name='[Calculation_1104507828801273857]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[covid_19_deaths]*[total_population]' />
      </column>
      <column caption='number_of_diabetes' datatype='real' name='[Calculation_1104507828801478658]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([percent_of_diabetes]*[total_population])/100' />
      </column>
      <column caption='number_of_smoker' datatype='real' name='[Calculation_1104507828801765379]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([percent_of_smokers]*[total_population])/100' />
      </column>
      <column caption='covid_death_ratio(pop)' datatype='real' name='[Calculation_3630182793145315328]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[covid_19_deaths]/[total_population]' />
      </column>
      <column caption='number_of_immigrants' datatype='real' name='[Calculation_4602678838025302016]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[immigrant_student_ratio]*[total_population]' />
      </column>
      <column caption='passange_load' datatype='real' name='[Calculation_4602678838032576513]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[passenger_load_ratio]*[total_population]' />
      </column>
      <column aggregation='None' datatype='integer' name='[Covid 19 Confirmed Cases (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='2' formula='[covid_19_confirmed_cases]' peg='0' size='722' />
      </column>
      <column aggregation='None' caption='Percent Of Diabetes (bin)' datatype='integer' name='[Percent Of Diabetes (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[percent_of_diabetes]' peg='0' size='1.42' />
      </column>
      <column aggregation='None' caption='Percent Of Smokers (bin)' datatype='integer' name='[Percent Of Smokers (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[percent_of_smokers]' peg='0' size-parameter='[Parameters].[Percent Of Smokers Parameter]' />
      </column>
      <column datatype='string' name='[Political Party (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[political_party]' new-bin='true' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='imputed-data.csv' datatype='table' name='[__tableau_internal_object_id__].[imputed-data.csv_53B28C20C97E466D9DDB4BC793851328]' role='measure' type='quantitative' />
      <column caption='Academic Population Ratio' datatype='real' name='[academic_population_ratio]' role='measure' type='quantitative' />
      <column caption='Age 0 4' datatype='integer' name='[age_0_4]' role='measure' type='quantitative' />
      <column caption='Age 10 14' datatype='integer' name='[age_10_14]' role='measure' type='quantitative' />
      <column caption='Age 15 19' datatype='integer' name='[age_15_19]' role='measure' type='quantitative' />
      <column caption='Age 20 24' datatype='integer' name='[age_20_24]' role='measure' type='quantitative' />
      <column caption='Age 25 29' datatype='integer' name='[age_25_29]' role='measure' type='quantitative' />
      <column caption='Age 30 34' datatype='integer' name='[age_30_34]' role='measure' type='quantitative' />
      <column caption='Age 35 39' datatype='integer' name='[age_35_39]' role='measure' type='quantitative' />
      <column caption='Age 40 44' datatype='integer' name='[age_40_44]' role='measure' type='quantitative' />
      <column caption='Age 45 49' datatype='integer' name='[age_45_49]' role='measure' type='quantitative' />
      <column caption='Age 50 54' datatype='integer' name='[age_50_54]' role='measure' type='quantitative' />
      <column caption='Age 55 59' datatype='integer' name='[age_55_59]' role='measure' type='quantitative' />
      <column caption='Age 5 9' datatype='integer' name='[age_5_9]' role='measure' type='quantitative' />
      <column caption='Age 60 64' datatype='integer' name='[age_60_64]' role='measure' type='quantitative' />
      <column caption='Age 65 69' datatype='integer' name='[age_65_69]' role='measure' type='quantitative' />
      <column caption='Age 70 74' datatype='integer' name='[age_70_74]' role='measure' type='quantitative' />
      <column caption='Age 75 79' datatype='integer' name='[age_75_79]' role='measure' type='quantitative' />
      <column caption='Age 80 84' datatype='integer' name='[age_80_84]' role='measure' type='quantitative' />
      <column caption='Age 85 Or Higher' datatype='integer' name='[age_85_or_higher]' role='measure' type='quantitative' />
      <column caption='Airport Distance' datatype='real' name='[airport_distance]' role='measure' type='quantitative' />
      <column caption='Area' datatype='real' name='[area]' role='measure' type='quantitative' />
      <column caption='County Fips' datatype='integer' name='[county_fips]' role='measure' type='quantitative' />
      <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Covid 19 Confirmed Cases' datatype='real' name='[covid_19_confirmed_cases]' role='measure' type='quantitative' />
      <column caption='Covid 19 Deaths' datatype='real' name='[covid_19_deaths]' role='measure' type='quantitative' />
      <column caption='Daily State Test' datatype='real' name='[daily_state_test]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Death Ratio' datatype='real' name='[death_ratio]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Grocery And Pharmacy Mobility Percent Change' datatype='real' name='[grocery_and_pharmacy_mobility_percent_change]' role='measure' type='quantitative' />
      <column caption='High School Diploma Only' datatype='real' name='[high_school_diploma_only]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Ratio' datatype='real' name='[hospital_beds_ratio]' role='measure' type='quantitative' />
      <column caption='Housing Density' datatype='real' name='[housing_density]' role='measure' type='quantitative' />
      <column caption='Immigrant Student Ratio' datatype='real' name='[immigrant_student_ratio]' role='measure' type='quantitative' />
      <column caption='intensive care unit (ICU) bed ratio' datatype='real' name='[intensive_care_unit_(ICU)_bed_ratio]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Less Than High School Diploma' datatype='real' name='[less_than_high_school_diploma]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Median Household Income' datatype='integer' name='[median_household_income]' role='measure' type='quantitative' />
      <column caption='Number Of Meat Plants' datatype='integer' name='[number_of_meat_plants]' role='measure' type='quantitative' />
      <column caption='Passenger Load Ratio' datatype='real' name='[passenger_load_ratio]' role='measure' type='quantitative' />
      <column caption='Percent Of Diabetes' datatype='real' name='[percent_of_diabetes]' role='measure' type='quantitative' />
      <column caption='Percent Of Insured Residents' datatype='real' name='[percent_of_insured_residents]' role='measure' type='quantitative' />
      <column caption='Percent Of Smokers' datatype='real' name='[percent_of_smokers]' role='measure' type='quantitative' />
      <column caption='Percent Of Vaccinated Residents' datatype='real' name='[percent_of_vaccinated_residents]' role='measure' type='quantitative' />
      <column caption='Political Party' datatype='integer' name='[political_party]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Population Ratio In State' datatype='real' name='[population_ratio_in_state]' role='measure' type='quantitative' />
      <column caption='Precipitation' datatype='real' name='[precipitation]' role='measure' type='quantitative' />
      <column caption='Proportion Female' datatype='real' name='[proportion_female]' role='measure' type='quantitative' />
      <column caption='Religious Congregation Ratio' datatype='real' name='[religious_congregation_ratio]' role='measure' type='quantitative' />
      <column caption='Retail And Recreation Mobility Percent Change' datatype='real' name='[retail_and_recreation_mobility_percent_change]' role='measure' type='quantitative' />
      <column caption='Social Distancing Encounters Grade' datatype='string' name='[social_distancing_encounters_grade]' role='dimension' type='nominal' />
      <column caption='Social Distancing Total Grade' datatype='string' name='[social_distancing_total_grade]' role='dimension' type='nominal' />
      <column caption='Social Distancing Travel Distance Grade' datatype='string' name='[social_distancing_travel_distance_grade]' role='dimension' type='nominal' />
      <column caption='Social Distancing Visitation Grade' datatype='string' name='[social_distancing_visitation_grade]' role='dimension' type='nominal' />
      <column caption='Some College Or Higher' datatype='real' name='[some_college_or_higher]' role='measure' type='quantitative' />
      <column caption='State Fips' datatype='integer' name='[state_fips]' role='measure' type='quantitative' />
      <column caption='State Name' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
      <column caption='Total Population' datatype='integer' name='[total_population]' role='measure' type='quantitative' />
      <column caption='Ventilator Capacity Ratio' datatype='real' name='[ventilator_capacity_ratio]' role='measure' type='quantitative' />
      <column caption='Virus Pressure' datatype='real' name='[virus_pressure]' role='measure' type='quantitative' />
      <column caption='Workplaces Mobility Percent Change' datatype='real' name='[workplaces_mobility_percent_change]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1104507828801159168]' derivation='Avg' name='[avg:Calculation_1104507828801159168:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1104507828801273857]' derivation='Avg' name='[avg:Calculation_1104507828801273857:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3630182793145315328]' derivation='Avg' name='[avg:Calculation_3630182793145315328:qk]' pivot='key' type='quantitative' />
      <column-instance column='[covid_19_confirmed_cases]' derivation='Avg' name='[avg:covid_19_confirmed_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[covid_19_deaths]' derivation='Avg' name='[avg:covid_19_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[death_ratio]' derivation='Avg' name='[avg:death_ratio:qk]' pivot='key' type='quantitative' />
      <column-instance column='[religious_congregation_ratio]' derivation='Avg' name='[avg:religious_congregation_ratio:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_population]' derivation='Avg' name='[avg:total_population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[virus_pressure]' derivation='Avg' name='[avg:virus_pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1104507828801159168]' derivation='None' name='[none:Calculation_1104507828801159168:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3630182793145315328]' derivation='None' name='[none:Calculation_3630182793145315328:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[covid_19_confirmed_cases]' derivation='None' name='[none:covid_19_confirmed_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[death_ratio]' derivation='None' name='[none:death_ratio:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_household_income]' derivation='None' name='[none:median_household_income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[religious_congregation_ratio]' derivation='None' name='[none:religious_congregation_ratio:qk]' pivot='key' type='quantitative' />
      <column-instance column='[state_name]' derivation='None' name='[none:state_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[total_population]' derivation='None' name='[none:total_population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3630182793145315328]' derivation='Sum' name='[sum:Calculation_3630182793145315328:qk]' pivot='key' type='quantitative' />
      <column-instance column='[covid_19_confirmed_cases]' derivation='Sum' name='[sum:covid_19_confirmed_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[covid_19_deaths]' derivation='Sum' name='[sum:covid_19_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[daily_state_test]' derivation='Sum' name='[sum:daily_state_test:qk]' pivot='key' type='quantitative' />
      <column-instance column='[death_ratio]' derivation='Sum' name='[sum:death_ratio:qk]' pivot='key' type='quantitative' />
      <column-instance column='[grocery_and_pharmacy_mobility_percent_change]' derivation='Sum' name='[sum:grocery_and_pharmacy_mobility_percent_change:qk]' pivot='key' type='quantitative' />
      <column-instance column='[percent_of_vaccinated_residents]' derivation='Sum' name='[sum:percent_of_vaccinated_residents:qk]' pivot='key' type='quantitative' />
      <column-instance column='[religious_congregation_ratio]' derivation='Sum' name='[sum:religious_congregation_ratio:qk]' pivot='key' type='quantitative' />
      <column-instance column='[retail_and_recreation_mobility_percent_change]' derivation='Sum' name='[sum:retail_and_recreation_mobility_percent_change:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_population]' derivation='Sum' name='[sum:total_population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[virus_pressure]' derivation='Sum' name='[sum:virus_pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[workplaces_mobility_percent_change]' derivation='Sum' name='[sum:workplaces_mobility_percent_change:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Inclusions (Covid 19 Confirmed Cases,Median Household Income)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:covid_19_confirmed_cases:qk]' />
          <groupfilter function='level-members' level='[none:median_household_income:qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Median Household Income,Total Population)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:median_household_income:qk]' />
          <groupfilter function='level-members' level='[none:total_population:qk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state_name, county_name'>
          <field>[state_name]</field>
          <field>[county_name]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:state_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:Calculation_1104507828801273857:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:covid_19_confirmed_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:covid_19_deaths:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[none:covid_19_confirmed_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:covid_19_confirmed_cases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:retail_and_recreation_mobility_percent_change:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:grocery_and_pharmacy_mobility_percent_change:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:religious_congregation_ratio:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[none:religious_congregation_ratio:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:religious_congregation_ratio:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:Calculation_3630182793145315328:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[none:Calculation_3630182793145315328:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:Calculation_3630182793145315328:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:covid_19_deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:daily_state_test:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:workplaces_mobility_percent_change:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:Calculation_1104507828801159168:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:death_ratio:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:total_population:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:virus_pressure:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[none:Calculation_1104507828801159168:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[none:death_ratio:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[none:total_population:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:death_ratio:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:percent_of_vaccinated_residents:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:total_population:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:virus_pressure:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ac998u1tqfv3o162z9r70hm1664]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Percent Of Smokers Parameter' datatype='real' name='[Percent Of Smokers Parameter]' param-domain-type='range' role='measure' type='quantitative' value='1.2984490208000001'>
          <calculation class='tableau' formula='1.2984490208000001' />
          <range granularity='1.2984490208000001' max='6.4922451040000002' min='1.2984490208000001' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='imputed-data.csv' id='imputed-data.csv_53B28C20C97E466D9DDB4BC793851328'>
            <properties context=''>
              <relation connection='textscan.05r8y4s14g52vc178yfaa1vro3z7' name='imputed-data.csv' table='[imputed-data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='integer' name='county_fips' ordinal='1' />
                  <column datatype='string' name='county_name' ordinal='2' />
                  <column datatype='integer' name='state_fips' ordinal='3' />
                  <column datatype='string' name='state_name' ordinal='4' />
                  <column datatype='real' name='covid_19_confirmed_cases' ordinal='5' />
                  <column datatype='real' name='covid_19_deaths' ordinal='6' />
                  <column datatype='string' name='social_distancing_total_grade' ordinal='7' />
                  <column datatype='string' name='social_distancing_visitation_grade' ordinal='8' />
                  <column datatype='string' name='social_distancing_encounters_grade' ordinal='9' />
                  <column datatype='string' name='social_distancing_travel_distance_grade' ordinal='10' />
                  <column datatype='real' name='retail_and_recreation_mobility_percent_change' ordinal='11' />
                  <column datatype='real' name='grocery_and_pharmacy_mobility_percent_change' ordinal='12' />
                  <column datatype='real' name='workplaces_mobility_percent_change' ordinal='13' />
                  <column datatype='real' name='daily_state_test' ordinal='14' />
                  <column datatype='real' name='precipitation' ordinal='15' />
                  <column datatype='real' name='temperature' ordinal='16' />
                  <column datatype='real' name='percent_of_vaccinated_residents' ordinal='17' />
                  <column datatype='real' name='virus_pressure' ordinal='18' />
                  <column datatype='integer' name='total_population' ordinal='19' />
                  <column datatype='real' name='proportion_female' ordinal='20' />
                  <column datatype='real' name='area' ordinal='21' />
                  <column datatype='real' name='population_density' ordinal='22' />
                  <column datatype='real' name='latitude' ordinal='23' />
                  <column datatype='real' name='longitude' ordinal='24' />
                  <column datatype='real' name='hospital_beds_ratio' ordinal='25' />
                  <column datatype='real' name='ventilator_capacity_ratio' ordinal='26' />
                  <column datatype='real' name='intensive_care_unit_(ICU)_bed_ratio' ordinal='27' />
                  <column datatype='real' name='housing_density' ordinal='28' />
                  <column datatype='real' name='less_than_high_school_diploma' ordinal='29' />
                  <column datatype='real' name='high_school_diploma_only' ordinal='30' />
                  <column datatype='real' name='some_college_or_higher' ordinal='31' />
                  <column datatype='real' name='academic_population_ratio' ordinal='32' />
                  <column datatype='real' name='percent_of_smokers' ordinal='33' />
                  <column datatype='real' name='percent_of_diabetes' ordinal='34' />
                  <column datatype='real' name='religious_congregation_ratio' ordinal='35' />
                  <column datatype='integer' name='political_party' ordinal='36' />
                  <column datatype='real' name='airport_distance' ordinal='37' />
                  <column datatype='real' name='passenger_load_ratio' ordinal='38' />
                  <column datatype='integer' name='number_of_meat_plants' ordinal='39' />
                  <column datatype='integer' name='median_household_income' ordinal='40' />
                  <column datatype='real' name='percent_of_insured_residents' ordinal='41' />
                  <column datatype='real' name='gdp_per_capita' ordinal='42' />
                  <column datatype='integer' name='age_0_4' ordinal='43' />
                  <column datatype='integer' name='age_5_9' ordinal='44' />
                  <column datatype='integer' name='age_10_14' ordinal='45' />
                  <column datatype='integer' name='age_15_19' ordinal='46' />
                  <column datatype='integer' name='age_20_24' ordinal='47' />
                  <column datatype='integer' name='age_25_29' ordinal='48' />
                  <column datatype='integer' name='age_30_34' ordinal='49' />
                  <column datatype='integer' name='age_35_39' ordinal='50' />
                  <column datatype='integer' name='age_40_44' ordinal='51' />
                  <column datatype='integer' name='age_45_49' ordinal='52' />
                  <column datatype='integer' name='age_50_54' ordinal='53' />
                  <column datatype='integer' name='age_55_59' ordinal='54' />
                  <column datatype='integer' name='age_60_64' ordinal='55' />
                  <column datatype='integer' name='age_65_69' ordinal='56' />
                  <column datatype='integer' name='age_70_74' ordinal='57' />
                  <column datatype='integer' name='age_75_79' ordinal='58' />
                  <column datatype='integer' name='age_80_84' ordinal='59' />
                  <column datatype='integer' name='age_85_or_higher' ordinal='60' />
                  <column datatype='real' name='immigrant_student_ratio' ordinal='61' />
                  <column datatype='real' name='death_ratio' ordinal='62' />
                  <column datatype='real' name='population_ratio_in_state' ordinal='63' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='GDP vs total population'>
      <table>
        <view>
          <datasources>
            <datasource caption='imputed-data' name='federated.0ac998u1tqfv3o162z9r70hm1664' />
          </datasources>
          <datasource-dependencies datasource='federated.0ac998u1tqfv3o162z9r70hm1664'>
            <column-instance column='[covid_19_confirmed_cases]' derivation='Avg' name='[avg:covid_19_confirmed_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[number_of_meat_plants]' derivation='Avg' name='[avg:number_of_meat_plants:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_population]' derivation='Avg' name='[avg:total_population:qk]' pivot='key' type='quantitative' />
            <column caption='Covid 19 Confirmed Cases' datatype='real' name='[covid_19_confirmed_cases]' role='measure' type='quantitative' />
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column caption='Median Household Income' datatype='integer' name='[median_household_income]' role='measure' type='quantitative' />
            <column-instance column='[gdp_per_capita]' derivation='None' name='[none:gdp_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_household_income]' derivation='None' name='[none:median_household_income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state_name]' derivation='None' name='[none:state_name:nk]' pivot='key' type='nominal' />
            <column caption='Number Of Meat Plants' datatype='integer' name='[number_of_meat_plants]' role='measure' type='quantitative' />
            <column caption='State Name' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total_population]' derivation='Sum' name='[sum:total_population:qk]' pivot='key' type='quantitative' />
            <column caption='Total Population' datatype='integer' name='[total_population]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0ac998u1tqfv3o162z9r70hm1664].[none:state_name:nk]' direction='DESC' using='[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:total_population:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[none:state_name:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:total_population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[none:state_name:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:covid_19_confirmed_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[none:state_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#b6992d' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:number_of_meat_plants:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[none:state_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0ac998u1tqfv3o162z9r70hm1664].[avg:total_population:qk] + ([federated.0ac998u1tqfv3o162z9r70hm1664].[avg:covid_19_confirmed_cases:qk] + [federated.0ac998u1tqfv3o162z9r70hm1664].[avg:number_of_meat_plants:qk]))</rows>
        <cols>([federated.0ac998u1tqfv3o162z9r70hm1664].[none:gdp_per_capita:qk] + [federated.0ac998u1tqfv3o162z9r70hm1664].[none:median_household_income:qk])</cols>
      </table>
      <simple-id uuid='{90946770-3640-4E5A-AF26-CF35F1D10555}' />
    </worksheet>
    <worksheet name='Top Populated States'>
      <table>
        <view>
          <datasources>
            <datasource caption='imputed-data' name='federated.0ac998u1tqfv3o162z9r70hm1664' />
          </datasources>
          <datasource-dependencies datasource='federated.0ac998u1tqfv3o162z9r70hm1664'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state_name]' derivation='None' name='[none:state_name:nk]' pivot='key' type='nominal' />
            <column caption='State Name' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total_population]' derivation='Sum' name='[sum:total_population:qk]' pivot='key' type='quantitative' />
            <column caption='Total Population' datatype='integer' name='[total_population]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0ac998u1tqfv3o162z9r70hm1664].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-16#</min>
            <max>#2020-03-16#</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ac998u1tqfv3o162z9r70hm1664].[none:state_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:total_population:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0ac998u1tqfv3o162z9r70hm1664].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0ac998u1tqfv3o162z9r70hm1664].[none:state_name:nk]' value='61' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:total_population:qk]</rows>
        <cols>[federated.0ac998u1tqfv3o162z9r70hm1664].[none:state_name:nk]</cols>
      </table>
      <simple-id uuid='{F51D753A-80C3-4579-933E-D8010C1F120E}' />
    </worksheet>
    <worksheet name='airport vs cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='imputed-data' name='federated.0ac998u1tqfv3o162z9r70hm1664' />
          </datasources>
          <datasource-dependencies datasource='federated.0ac998u1tqfv3o162z9r70hm1664'>
            <column caption='Airport Distance' datatype='real' name='[airport_distance]' role='measure' type='quantitative' />
            <column-instance column='[covid_19_confirmed_cases]' derivation='Avg' name='[avg:covid_19_confirmed_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Covid 19 Confirmed Cases' datatype='real' name='[covid_19_confirmed_cases]' role='measure' type='quantitative' />
            <column-instance column='[airport_distance]' derivation='None' name='[none:airport_distance:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:covid_19_confirmed_cases:qk]</rows>
        <cols>[federated.0ac998u1tqfv3o162z9r70hm1664].[none:airport_distance:qk]</cols>
      </table>
      <simple-id uuid='{79EDC97A-070B-41BA-BCE6-5EBF10EEAC05}' />
    </worksheet>
    <worksheet name='cases vs politics'>
      <table>
        <view>
          <datasources>
            <datasource caption='imputed-data' name='federated.0ac998u1tqfv3o162z9r70hm1664' />
          </datasources>
          <datasource-dependencies datasource='federated.0ac998u1tqfv3o162z9r70hm1664'>
            <column datatype='string' name='[Political Party (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[political_party]' new-bin='true' />
            </column>
            <column caption='Covid 19 Confirmed Cases' datatype='real' name='[covid_19_confirmed_cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='Political Party' datatype='integer' name='[political_party]' role='measure' type='quantitative' />
            <column-instance column='[covid_19_confirmed_cases]' derivation='Sum' name='[sum:covid_19_confirmed_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0ac998u1tqfv3o162z9r70hm1664].[Political Party (group)] * [federated.0ac998u1tqfv3o162z9r70hm1664].[sum:covid_19_confirmed_cases:qk])</rows>
        <cols>[federated.0ac998u1tqfv3o162z9r70hm1664].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{44B97AC6-1091-454D-B0DB-3F05D4C31C27}' />
    </worksheet>
    <worksheet name='cases vs vaccine'>
      <table>
        <view>
          <datasources>
            <datasource caption='imputed-data' name='federated.0ac998u1tqfv3o162z9r70hm1664' />
          </datasources>
          <datasource-dependencies datasource='federated.0ac998u1tqfv3o162z9r70hm1664'>
            <column caption='Covid 19 Confirmed Cases' datatype='real' name='[covid_19_confirmed_cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='Percent Of Vaccinated Residents' datatype='real' name='[percent_of_vaccinated_residents]' role='measure' type='quantitative' />
            <column-instance column='[covid_19_confirmed_cases]' derivation='Sum' name='[sum:covid_19_confirmed_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[percent_of_vaccinated_residents]' derivation='Sum' name='[sum:percent_of_vaccinated_residents:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:percent_of_vaccinated_residents:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:covid_19_confirmed_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:percent_of_vaccinated_residents:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0ac998u1tqfv3o162z9r70hm1664].[sum:covid_19_confirmed_cases:qk] + [federated.0ac998u1tqfv3o162z9r70hm1664].[sum:percent_of_vaccinated_residents:qk])</rows>
        <cols>[federated.0ac998u1tqfv3o162z9r70hm1664].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{2DFBCA5E-D07E-4B6D-8881-E0F8A917B20F}' />
    </worksheet>
    <worksheet name='corr smoker vs death'>
      <table>
        <view>
          <datasources>
            <datasource caption='imputed-data' name='federated.0ac998u1tqfv3o162z9r70hm1664' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Percent Of Smokers Parameter' datatype='real' name='[Percent Of Smokers Parameter]' param-domain-type='range' role='measure' type='quantitative' value='1.2984490208000001'>
              <calculation class='tableau' formula='1.2984490208000001' />
              <range granularity='1.2984490208000001' max='6.4922451040000002' min='1.2984490208000001' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ac998u1tqfv3o162z9r70hm1664'>
            <column aggregation='None' caption='Percent Of Smokers (bin)' datatype='integer' name='[Percent Of Smokers (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[percent_of_smokers]' peg='0' size-parameter='[Parameters].[Percent Of Smokers Parameter]' />
            </column>
            <column-instance column='[death_ratio]' derivation='Avg' name='[avg:death_ratio:qk]' pivot='key' type='quantitative' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Death Ratio' datatype='real' name='[death_ratio]' role='measure' type='quantitative' />
            <column-instance column='[Percent Of Smokers (bin)]' derivation='None' name='[none:Percent Of Smokers (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column caption='Percent Of Smokers' datatype='real' name='[percent_of_smokers]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <lod column='[federated.0ac998u1tqfv3o162z9r70hm1664].[none:county_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:death_ratio:qk]</rows>
        <cols>[federated.0ac998u1tqfv3o162z9r70hm1664].[none:Percent Of Smokers (bin):ok]</cols>
      </table>
      <simple-id uuid='{B431F263-4205-476A-B748-9C8233C4CA41}' />
    </worksheet>
    <worksheet name='daily test vs cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='imputed-data' name='federated.0ac998u1tqfv3o162z9r70hm1664' />
          </datasources>
          <datasource-dependencies datasource='federated.0ac998u1tqfv3o162z9r70hm1664'>
            <column caption='Covid 19 Confirmed Cases' datatype='real' name='[covid_19_confirmed_cases]' role='measure' type='quantitative' />
            <column caption='Daily State Test' datatype='real' name='[daily_state_test]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[covid_19_confirmed_cases]' derivation='Sum' name='[sum:covid_19_confirmed_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[daily_state_test]' derivation='Sum' name='[sum:daily_state_test:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:daily_state_test:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:covid_19_confirmed_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:daily_state_test:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0ac998u1tqfv3o162z9r70hm1664].[sum:covid_19_confirmed_cases:qk] + [federated.0ac998u1tqfv3o162z9r70hm1664].[sum:daily_state_test:qk])</rows>
        <cols>[federated.0ac998u1tqfv3o162z9r70hm1664].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{26B6A2EC-6702-4C02-8270-C6E2B124EF62}' />
    </worksheet>
    <worksheet name='death vs covid death'>
      <table>
        <view>
          <datasources>
            <datasource caption='imputed-data' name='federated.0ac998u1tqfv3o162z9r70hm1664' />
          </datasources>
          <datasource-dependencies datasource='federated.0ac998u1tqfv3o162z9r70hm1664'>
            <column caption='death_number' datatype='real' name='[Calculation_1104507828801159168]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[death_ratio]*[total_population]' />
            </column>
            <column caption='covid_19_deaths_number' datatype='real' name='[Calculation_1104507828801273857]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[covid_19_deaths]*[total_population]' />
            </column>
            <column-instance column='[Calculation_1104507828801273857]' derivation='Avg' name='[avg:Calculation_1104507828801273857:qk]' pivot='key' type='quantitative' />
            <column caption='Covid 19 Deaths' datatype='real' name='[covid_19_deaths]' role='measure' type='quantitative' />
            <column caption='Death Ratio' datatype='real' name='[death_ratio]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1104507828801159168]' derivation='None' name='[none:Calculation_1104507828801159168:qk]' pivot='key' type='quantitative' />
            <column caption='Total Population' datatype='integer' name='[total_population]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:Calculation_1104507828801273857:qk]</rows>
        <cols>[federated.0ac998u1tqfv3o162z9r70hm1664].[none:Calculation_1104507828801159168:qk]</cols>
      </table>
      <simple-id uuid='{12D3439A-79AE-4317-A503-6174877B88AE}' />
    </worksheet>
    <worksheet name='diabetes'>
      <table>
        <view>
          <datasources>
            <datasource caption='imputed-data' name='federated.0ac998u1tqfv3o162z9r70hm1664' />
          </datasources>
          <datasource-dependencies datasource='federated.0ac998u1tqfv3o162z9r70hm1664'>
            <column caption='death_number' datatype='real' name='[Calculation_1104507828801159168]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[death_ratio]*[total_population]' />
            </column>
            <column caption='number_of_diabetes' datatype='real' name='[Calculation_1104507828801478658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([percent_of_diabetes]*[total_population])/100' />
            </column>
            <column-instance column='[Calculation_1104507828801159168]' derivation='Avg' name='[avg:Calculation_1104507828801159168:qk]' pivot='key' type='quantitative' />
            <column-instance column='[covid_19_deaths]' derivation='Avg' name='[avg:covid_19_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Covid 19 Deaths' datatype='real' name='[covid_19_deaths]' role='measure' type='quantitative' />
            <column caption='Death Ratio' datatype='real' name='[death_ratio]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1104507828801478658]' derivation='None' name='[none:Calculation_1104507828801478658:qk]' pivot='key' type='quantitative' />
            <column caption='Percent Of Diabetes' datatype='real' name='[percent_of_diabetes]' role='measure' type='quantitative' />
            <column caption='Total Population' datatype='integer' name='[total_population]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:covid_19_deaths:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:Calculation_1104507828801159168:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:covid_19_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>([federated.0ac998u1tqfv3o162z9r70hm1664].[avg:Calculation_1104507828801159168:qk] + [federated.0ac998u1tqfv3o162z9r70hm1664].[avg:covid_19_deaths:qk])</rows>
        <cols>[federated.0ac998u1tqfv3o162z9r70hm1664].[none:Calculation_1104507828801478658:qk]</cols>
      </table>
      <simple-id uuid='{CC46FD08-9A3A-4ABC-A34E-E94386C06F25}' />
    </worksheet>
    <worksheet name='diabetes vs death'>
      <table>
        <view>
          <datasources>
            <datasource caption='imputed-data' name='federated.0ac998u1tqfv3o162z9r70hm1664' />
          </datasources>
          <datasource-dependencies datasource='federated.0ac998u1tqfv3o162z9r70hm1664'>
            <column caption='covid_death_ratio(pop)' datatype='real' name='[Calculation_3630182793145315328]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[covid_19_deaths]/[total_population]' />
            </column>
            <column aggregation='None' caption='Percent Of Diabetes (bin)' datatype='integer' name='[Percent Of Diabetes (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[percent_of_diabetes]' peg='0' size='1.42' />
            </column>
            <column-instance column='[Calculation_3630182793145315328]' derivation='Avg' name='[avg:Calculation_3630182793145315328:qk]' pivot='key' type='quantitative' />
            <column-instance column='[death_ratio]' derivation='Avg' name='[avg:death_ratio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[percent_of_diabetes]' derivation='Avg' name='[avg:percent_of_diabetes:ok]' pivot='key' type='ordinal' />
            <column caption='Covid 19 Deaths' datatype='real' name='[covid_19_deaths]' role='measure' type='quantitative' />
            <column caption='Death Ratio' datatype='real' name='[death_ratio]' role='measure' type='quantitative' />
            <column-instance column='[Percent Of Diabetes (bin)]' derivation='None' name='[none:Percent Of Diabetes (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Percent Of Diabetes' datatype='real' name='[percent_of_diabetes]' role='measure' type='quantitative' />
            <column caption='Total Population' datatype='integer' name='[total_population]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:Calculation_3630182793145315328:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:death_ratio:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:Calculation_3630182793145315328:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ac998u1tqfv3o162z9r70hm1664].[avg:death_ratio:qk] + [federated.0ac998u1tqfv3o162z9r70hm1664].[avg:Calculation_3630182793145315328:qk])</rows>
        <cols>([federated.0ac998u1tqfv3o162z9r70hm1664].[none:Percent Of Diabetes (bin):ok] / [federated.0ac998u1tqfv3o162z9r70hm1664].[avg:percent_of_diabetes:ok])</cols>
        <show-full-range>
          <column>[federated.0ac998u1tqfv3o162z9r70hm1664].[Percent Of Diabetes (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{CE103357-7DAB-4C0B-A3AA-4D025D456788}' />
    </worksheet>
    <worksheet name='forecast'>
      <table>
        <view>
          <datasources>
            <datasource caption='imputed-data' name='federated.0ac998u1tqfv3o162z9r70hm1664' />
          </datasources>
          <datasource-dependencies datasource='federated.0ac998u1tqfv3o162z9r70hm1664'>
            <column caption='Covid 19 Confirmed Cases' datatype='real' name='[covid_19_confirmed_cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[covid_19_confirmed_cases]' derivation='Sum' forecast-column-base='[sum:covid_19_confirmed_cases:qk]' forecast-column-type='forecast-value' name='[fVal:sum:covid_19_confirmed_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[covid_19_confirmed_cases]' derivation='Sum' name='[sum:covid_19_confirmed_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ac998u1tqfv3o162z9r70hm1664].[none:date:ok]'>
            <groupfilter from='#2020-01-22#' function='range' level='[none:date:ok]' to='#2020-12-31#' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ac998u1tqfv3o162z9r70hm1664].[none:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ac998u1tqfv3o162z9r70hm1664].[fVal:sum:covid_19_confirmed_cases:qk]</rows>
        <cols>[federated.0ac998u1tqfv3o162z9r70hm1664].[tdy:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-zero' ignore-last='1' model-type='custom' range-periods='Month-Trunc' range-size='1' range-type='next' season-type='ets-additive' show-prediction-bands='true' trend-type='ets-additive' />
      </table>
      <simple-id uuid='{08CAF84C-5F6F-4432-B0B5-5B3A859DE9BD}' />
    </worksheet>
    <worksheet name='immigrant vs cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='imputed-data' name='federated.0ac998u1tqfv3o162z9r70hm1664' />
          </datasources>
          <datasource-dependencies datasource='federated.0ac998u1tqfv3o162z9r70hm1664'>
            <column caption='number_of_immigrants' datatype='real' name='[Calculation_4602678838025302016]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[immigrant_student_ratio]*[total_population]' />
            </column>
            <column-instance column='[covid_19_confirmed_cases]' derivation='Avg' name='[avg:covid_19_confirmed_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Covid 19 Confirmed Cases' datatype='real' name='[covid_19_confirmed_cases]' role='measure' type='quantitative' />
            <column caption='Immigrant Student Ratio' datatype='real' name='[immigrant_student_ratio]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_4602678838025302016]' derivation='None' name='[none:Calculation_4602678838025302016:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_4602678838025302016]' derivation='None' name='[none:Calculation_4602678838025302016:qk]' pivot='key' type='quantitative' />
            <column caption='Total Population' datatype='integer' name='[total_population]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ac998u1tqfv3o162z9r70hm1664].[none:Calculation_4602678838025302016:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='0.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='6.0000000000000009' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='12.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='12.000000000000005' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='13.999999999999973' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='13.999999999999991' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='39.999999999999993' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='43.999999999999993' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='46.999999999999986' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='47.999999999999993' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='49.999999999999964' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='57.999999999999872' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='63.999999999999879' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='69.999999999999929' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='69.999999999999957' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='70.999999999999972' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='81.999999999999986' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='89.999999999999915' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='97.000000000000043' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='100.0' />
              <groupfilter from='113.99999999999996' function='range' level='[none:Calculation_4602678838025302016:ok]' to='118.99999999999997' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='125.99999999999994' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='129.99999999999997' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='141.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='141.99999999999997' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='171.99999999999997' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='196.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='206.99999999999997' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='215.0' />
              <groupfilter from='227.99999999999997' function='range' level='[none:Calculation_4602678838025302016:ok]' to='237.00000000000003' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='242.99999999999997' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='261.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='265.99999999999994' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='272.00000000000006' />
              <groupfilter from='282.0' function='range' level='[none:Calculation_4602678838025302016:ok]' to='284.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='291.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='294.00000000000011' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='344.99999999999994' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='353.00000000000006' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='359.99999999999994' />
              <groupfilter from='377.99999999999989' function='range' level='[none:Calculation_4602678838025302016:ok]' to='383.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='391.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='417.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='435.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='438.00000000000006' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='439.99999999999983' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='444.99999999999989' />
              <groupfilter from='454.0' function='range' level='[none:Calculation_4602678838025302016:ok]' to='460.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='467.99999999999994' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='475.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='481.99999999999994' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='483.99999999999989' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='487.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='499.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='505.99999999999989' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='523.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='532.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='536.99999999999977' />
              <groupfilter from='543.0' function='range' level='[none:Calculation_4602678838025302016:ok]' to='556.99999999999989' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='566.00000000000011' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='571.99999999999989' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='572.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='576.00000000000011' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='577.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='582.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='611.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='615.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='618.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='643.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='653.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='656.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='657.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='663.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='667.99999999999989' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='670.0' />
              <groupfilter from='680.0' function='range' level='[none:Calculation_4602678838025302016:ok]' to='690.00000000000011' />
              <groupfilter from='694.0' function='range' level='[none:Calculation_4602678838025302016:ok]' to='701.00000000000023' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='709.0' />
              <groupfilter from='715.00000000000011' function='range' level='[none:Calculation_4602678838025302016:ok]' to='721.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='731.00000000000011' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='736.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='740.00000000000011' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='745.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='750.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='781.00000000000011' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='786.99999999999989' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='789.00000000000023' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='789.99999999999977' />
              <groupfilter from='793.00000000000034' function='range' level='[none:Calculation_4602678838025302016:ok]' to='803.99999999999977' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='806.00000000000011' />
              <groupfilter from='837.99999999999989' function='range' level='[none:Calculation_4602678838025302016:ok]' to='843.00000000000011' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='853.00000000000011' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='860.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='873.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='890.99999999999989' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='932.00000000000011' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='957.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='958.00000000000011' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='966.00000000000011' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='979.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='988.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1010.9999999999999' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1016.9999999999999' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1023.9999999999999' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1024.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1043.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1045.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1054.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1076.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1089.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1103.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1119.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1156.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1160.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1228.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1244.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1246.0' />
              <groupfilter from='1257.9999999999998' function='range' level='[none:Calculation_4602678838025302016:ok]' to='1267.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1274.0000000000002' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1287.0000000000002' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1324.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1325.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1330.9999999999998' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1345.0000000000002' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1355.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1387.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1402.9999999999998' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1413.9999999999998' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1420.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1429.9999999999998' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1464.9999999999995' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1474.0' />
              <groupfilter from='1502.0000000000002' function='range' level='[none:Calculation_4602678838025302016:ok]' to='1504.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1531.0000000000002' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1532.9999999999998' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1543.9999999999998' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1589.0000000000002' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1597.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1646.0000000000002' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1672.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1712.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1741.0000000000002' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1751.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1771.9999999999998' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1795.9999999999998' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1798.9999999999998' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1816.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1817.0000000000002' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1826.0000000000002' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1828.0' />
              <groupfilter from='1844.0000000000007' function='range' level='[none:Calculation_4602678838025302016:ok]' to='1846.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1867.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1900.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1930.9999999999998' />
              <groupfilter from='1942.0000000000002' function='range' level='[none:Calculation_4602678838025302016:ok]' to='1954.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='1962.0000000000002' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2023.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2023.0000000000007' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2065.0000000000005' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2079.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2120.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2124.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2130.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2178.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2192.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2218.0000000000009' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2241.9999999999995' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2242.0000000000005' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2271.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2333.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2462.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2480.0' />
              <groupfilter from='2489.0' function='range' level='[none:Calculation_4602678838025302016:ok]' to='2513.0000000000009' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2532.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2553.0000000000005' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2607.9999999999995' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2657.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2754.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2789.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2790.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2851.0000000000005' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2859.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2907.9999999999995' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2955.0000000000009' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='2972.9999999999991' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='3015.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='3044.0000000000005' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='3075.9999999999995' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='3097.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='3106.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='3107.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='3137.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='3191.9999999999995' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='3265.0' />
              <groupfilter from='3317.0' function='range' level='[none:Calculation_4602678838025302016:ok]' to='3324.9999999999995' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='3335.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='3337.9999999999995' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='3368.0000000000009' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='3440.0000000000005' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='3509.0000000000005' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='3575.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='3608.9999999999995' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='3657.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='3694.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='3716.0000000000005' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='3736.9999999999995' />
              <groupfilter from='3826.0000000000009' function='range' level='[none:Calculation_4602678838025302016:ok]' to='3911.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='4033.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='4034.9999999999982' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='4135.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='4263.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='4279.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='4447.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='4463.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='4501.0000000000009' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='4845.0000000000009' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='4906.9999999999982' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='4945.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='4984.0' />
              <groupfilter from='5147.0' function='range' level='[none:Calculation_4602678838025302016:ok]' to='5201.9999999999991' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='5519.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='5526.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='5615.0' />
              <groupfilter from='5674.0' function='range' level='[none:Calculation_4602678838025302016:ok]' to='5806.0' />
              <groupfilter from='5897.0' function='range' level='[none:Calculation_4602678838025302016:ok]' to='5947.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='5955.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='6109.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='6111.9999999999991' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='6135.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='6156.0' />
              <groupfilter from='6257.0' function='range' level='[none:Calculation_4602678838025302016:ok]' to='6483.9999999999991' />
              <groupfilter from='6628.0' function='range' level='[none:Calculation_4602678838025302016:ok]' to='6723.9999999999991' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='6730.0000000000009' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='7195.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='7196.9999999999991' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='7455.9999999999982' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='7459.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='7573.9999999999991' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='7579.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='7673.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='7806.9999999999991' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='7855.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='7877.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='8019.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='8188.0000000000018' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='8491.0000000000018' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='8558.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='8604.0000000000036' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='8635.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='8733.0' />
              <groupfilter from='8966.0000000000018' function='range' level='[none:Calculation_4602678838025302016:ok]' to='8991.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='9045.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='9283.0' />
              <groupfilter from='9324.0' function='range' level='[none:Calculation_4602678838025302016:ok]' to='9553.0' />
              <groupfilter from='9684.0000000000018' function='range' level='[none:Calculation_4602678838025302016:ok]' to='9746.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='9937.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='10108.000000000002' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='10114.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='10166.000000000002' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='10219.999999999998' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='10378.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='10395.999999999998' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='10649.000000000002' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='10730.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='10807.999999999998' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='10906.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='10997.0' />
              <groupfilter from='11263.0' function='range' level='[none:Calculation_4602678838025302016:ok]' to='11359.000000000002' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='12045.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='12287.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='12624.999999999998' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='12661.999999999998' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='12969.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='13433.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='13551.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='13701.000000000002' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='13896.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='14001.999999999998' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='14105.000000000002' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='14573.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='14623.000000000002' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='14766.999999999996' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='15108.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='15661.999999999996' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='16021.999999999996' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='16027.000000000002' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='16547.000000000004' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='17633.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='17925.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='18633.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='18947.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='19305.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='20087.999999999996' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='20194.000000000004' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='20618.0' />
              <groupfilter from='21295.000000000004' function='range' level='[none:Calculation_4602678838025302016:ok]' to='21343.0' />
              <groupfilter from='22138.0' function='range' level='[none:Calculation_4602678838025302016:ok]' to='22257.999999999993' />
              <groupfilter from='23001.0' function='range' level='[none:Calculation_4602678838025302016:ok]' to='23288.000000000004' />
              <groupfilter from='24074.999999999989' function='range' level='[none:Calculation_4602678838025302016:ok]' to='24600.999999999993' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='25199.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='25699.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='26040.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='28994.999999999996' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='30699.0' />
              <groupfilter from='31699.0' function='range' level='[none:Calculation_4602678838025302016:ok]' to='33900.0' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='35320.999999999993' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='35859.999999999993' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='39174.000000000007' />
              <groupfilter function='member' level='[none:Calculation_4602678838025302016:ok]' member='39700.0' />
              <groupfilter from='43458.0' function='range' level='[none:Calculation_4602678838025302016:ok]' to='52478.000000000007' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ac998u1tqfv3o162z9r70hm1664].[none:Calculation_4602678838025302016:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:covid_19_confirmed_cases:qk]</rows>
        <cols>[federated.0ac998u1tqfv3o162z9r70hm1664].[none:Calculation_4602678838025302016:qk]</cols>
      </table>
      <simple-id uuid='{1798F8BC-C018-4EFD-B6D8-4AA544FBA1F6}' />
    </worksheet>
    <worksheet name='mobility vs cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='imputed-data' name='federated.0ac998u1tqfv3o162z9r70hm1664' />
          </datasources>
          <datasource-dependencies datasource='federated.0ac998u1tqfv3o162z9r70hm1664'>
            <column caption='Covid 19 Confirmed Cases' datatype='real' name='[covid_19_confirmed_cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Grocery And Pharmacy Mobility Percent Change' datatype='real' name='[grocery_and_pharmacy_mobility_percent_change]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='Retail And Recreation Mobility Percent Change' datatype='real' name='[retail_and_recreation_mobility_percent_change]' role='measure' type='quantitative' />
            <column-instance column='[covid_19_confirmed_cases]' derivation='Sum' name='[sum:covid_19_confirmed_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[grocery_and_pharmacy_mobility_percent_change]' derivation='Sum' name='[sum:grocery_and_pharmacy_mobility_percent_change:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retail_and_recreation_mobility_percent_change]' derivation='Sum' name='[sum:retail_and_recreation_mobility_percent_change:qk]' pivot='key' type='quantitative' />
            <column-instance column='[workplaces_mobility_percent_change]' derivation='Sum' name='[sum:workplaces_mobility_percent_change:qk]' pivot='key' type='quantitative' />
            <column caption='Workplaces Mobility Percent Change' datatype='real' name='[workplaces_mobility_percent_change]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:grocery_and_pharmacy_mobility_percent_change:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:covid_19_confirmed_cases:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:workplaces_mobility_percent_change:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:covid_19_confirmed_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:retail_and_recreation_mobility_percent_change:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:grocery_and_pharmacy_mobility_percent_change:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0ac998u1tqfv3o162z9r70hm1664].[sum:workplaces_mobility_percent_change:qk] + ([federated.0ac998u1tqfv3o162z9r70hm1664].[sum:covid_19_confirmed_cases:qk] + ([federated.0ac998u1tqfv3o162z9r70hm1664].[sum:retail_and_recreation_mobility_percent_change:qk] + [federated.0ac998u1tqfv3o162z9r70hm1664].[sum:grocery_and_pharmacy_mobility_percent_change:qk])))</rows>
        <cols>[federated.0ac998u1tqfv3o162z9r70hm1664].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{BB28ED4B-7E2A-4ABB-A10F-9B98429FFCE5}' />
    </worksheet>
    <worksheet name='passanger load'>
      <table>
        <view>
          <datasources>
            <datasource caption='imputed-data' name='federated.0ac998u1tqfv3o162z9r70hm1664' />
          </datasources>
          <datasource-dependencies datasource='federated.0ac998u1tqfv3o162z9r70hm1664'>
            <column-instance column='[covid_19_confirmed_cases]' derivation='Avg' name='[avg:covid_19_confirmed_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Covid 19 Confirmed Cases' datatype='real' name='[covid_19_confirmed_cases]' role='measure' type='quantitative' />
            <column-instance column='[passenger_load_ratio]' derivation='None' name='[none:passenger_load_ratio:qk]' pivot='key' type='quantitative' />
            <column caption='Passenger Load Ratio' datatype='real' name='[passenger_load_ratio]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:covid_19_confirmed_cases:qk]</rows>
        <cols>[federated.0ac998u1tqfv3o162z9r70hm1664].[none:passenger_load_ratio:qk]</cols>
      </table>
      <simple-id uuid='{E7D793D2-AC4D-498B-90A8-B9C9C2A698A7}' />
    </worksheet>
    <worksheet name='religion vs cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='imputed-data' name='federated.0ac998u1tqfv3o162z9r70hm1664' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ac998u1tqfv3o162z9r70hm1664'>
            <column-instance column='[covid_19_confirmed_cases]' derivation='Avg' name='[avg:covid_19_confirmed_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_population]' derivation='Avg' name='[avg:total_population:qk]' pivot='key' type='quantitative' />
            <column caption='Covid 19 Confirmed Cases' datatype='real' name='[covid_19_confirmed_cases]' role='measure' type='quantitative' />
            <column-instance column='[religious_congregation_ratio]' derivation='None' name='[none:religious_congregation_ratio:qk]' pivot='key' type='quantitative' />
            <column caption='Religious Congregation Ratio' datatype='real' name='[religious_congregation_ratio]' role='measure' type='quantitative' />
            <column caption='Total Population' datatype='integer' name='[total_population]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:covid_19_confirmed_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:total_population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>([federated.0ac998u1tqfv3o162z9r70hm1664].[avg:covid_19_confirmed_cases:qk] + [federated.0ac998u1tqfv3o162z9r70hm1664].[avg:total_population:qk])</rows>
        <cols>[federated.0ac998u1tqfv3o162z9r70hm1664].[none:religious_congregation_ratio:qk]</cols>
        <show-full-range>
          <column>[federated.0ac998u1tqfv3o162z9r70hm1664].[Covid 19 Confirmed Cases (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{5EDF91C1-E1AC-46E3-A2FE-F07334E6668A}' />
    </worksheet>
    <worksheet name='seasonal pattern'>
      <table>
        <view>
          <datasources>
            <datasource caption='imputed-data' name='federated.0ac998u1tqfv3o162z9r70hm1664' />
          </datasources>
          <datasource-dependencies datasource='federated.0ac998u1tqfv3o162z9r70hm1664'>
            <column-instance column='[covid_19_confirmed_cases]' derivation='Avg' name='[avg:covid_19_confirmed_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Covid 19 Confirmed Cases' datatype='real' name='[covid_19_confirmed_cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Weekday' name='[wd:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:covid_19_confirmed_cases:qk]</rows>
        <cols>[federated.0ac998u1tqfv3o162z9r70hm1664].[wd:date:ok]</cols>
      </table>
      <simple-id uuid='{5042A18D-86CE-477C-8358-4F834BEF8EC7}' />
    </worksheet>
    <worksheet name='smoker vs death'>
      <table>
        <view>
          <datasources>
            <datasource caption='imputed-data' name='federated.0ac998u1tqfv3o162z9r70hm1664' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Percent Of Smokers Parameter' datatype='real' name='[Percent Of Smokers Parameter]' param-domain-type='range' role='measure' type='quantitative' value='1.2984490208000001'>
              <calculation class='tableau' formula='1.2984490208000001' />
              <range granularity='1.2984490208000001' max='6.4922451040000002' min='1.2984490208000001' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ac998u1tqfv3o162z9r70hm1664'>
            <column caption='covid_death_ratio(pop)' datatype='real' name='[Calculation_3630182793145315328]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[covid_19_deaths]/[total_population]' />
            </column>
            <column aggregation='None' caption='Percent Of Smokers (bin)' datatype='integer' name='[Percent Of Smokers (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[percent_of_smokers]' peg='0' size-parameter='[Parameters].[Percent Of Smokers Parameter]' />
            </column>
            <column-instance column='[Calculation_3630182793145315328]' derivation='Avg' name='[avg:Calculation_3630182793145315328:qk]' pivot='key' type='quantitative' />
            <column-instance column='[death_ratio]' derivation='Avg' name='[avg:death_ratio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[percent_of_smokers]' derivation='Avg' name='[avg:percent_of_smokers:ok]' pivot='key' type='ordinal' />
            <column caption='Covid 19 Deaths' datatype='real' name='[covid_19_deaths]' role='measure' type='quantitative' />
            <column caption='Death Ratio' datatype='real' name='[death_ratio]' role='measure' type='quantitative' />
            <column-instance column='[Percent Of Smokers (bin)]' derivation='None' name='[none:Percent Of Smokers (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Percent Of Smokers' datatype='real' name='[percent_of_smokers]' role='measure' type='quantitative' />
            <column caption='Total Population' datatype='integer' name='[total_population]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:Calculation_3630182793145315328:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:death_ratio:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.84558010101318359' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:Calculation_3630182793145315328:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0ac998u1tqfv3o162z9r70hm1664].[avg:death_ratio:qk] + [federated.0ac998u1tqfv3o162z9r70hm1664].[avg:Calculation_3630182793145315328:qk])</rows>
        <cols>([federated.0ac998u1tqfv3o162z9r70hm1664].[none:Percent Of Smokers (bin):ok] / [federated.0ac998u1tqfv3o162z9r70hm1664].[avg:percent_of_smokers:ok])</cols>
        <show-full-range>
          <column>[federated.0ac998u1tqfv3o162z9r70hm1664].[Percent Of Smokers (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{AB8EA720-3704-4630-9061-FE9776DC1767}' />
    </worksheet>
    <worksheet name='smokers'>
      <table>
        <view>
          <datasources>
            <datasource caption='imputed-data' name='federated.0ac998u1tqfv3o162z9r70hm1664' />
          </datasources>
          <datasource-dependencies datasource='federated.0ac998u1tqfv3o162z9r70hm1664'>
            <column caption='death_number' datatype='real' name='[Calculation_1104507828801159168]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[death_ratio]*[total_population]' />
            </column>
            <column caption='number_of_smoker' datatype='real' name='[Calculation_1104507828801765379]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([percent_of_smokers]*[total_population])/100' />
            </column>
            <column-instance column='[Calculation_1104507828801159168]' derivation='Avg' name='[avg:Calculation_1104507828801159168:qk]' pivot='key' type='quantitative' />
            <column-instance column='[covid_19_deaths]' derivation='Avg' name='[avg:covid_19_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Covid 19 Deaths' datatype='real' name='[covid_19_deaths]' role='measure' type='quantitative' />
            <column caption='Death Ratio' datatype='real' name='[death_ratio]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1104507828801765379]' derivation='None' name='[none:Calculation_1104507828801765379:qk]' pivot='key' type='quantitative' />
            <column caption='Percent Of Smokers' datatype='real' name='[percent_of_smokers]' role='measure' type='quantitative' />
            <column caption='Total Population' datatype='integer' name='[total_population]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:covid_19_deaths:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:Calculation_1104507828801159168:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:covid_19_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>([federated.0ac998u1tqfv3o162z9r70hm1664].[avg:Calculation_1104507828801159168:qk] + [federated.0ac998u1tqfv3o162z9r70hm1664].[avg:covid_19_deaths:qk])</rows>
        <cols>[federated.0ac998u1tqfv3o162z9r70hm1664].[none:Calculation_1104507828801765379:qk]</cols>
      </table>
      <simple-id uuid='{1358F35B-9F04-43B6-81FC-75928F50F741}' />
    </worksheet>
    <worksheet name='social distance vs cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='imputed-data' name='federated.0ac998u1tqfv3o162z9r70hm1664' />
          </datasources>
          <datasource-dependencies datasource='federated.0ac998u1tqfv3o162z9r70hm1664'>
            <column caption='Covid 19 Confirmed Cases' datatype='real' name='[covid_19_confirmed_cases]' role='measure' type='quantitative' />
            <column-instance column='[social_distancing_total_grade]' derivation='None' name='[none:social_distancing_total_grade:nk]' pivot='key' type='nominal' />
            <column caption='Social Distancing Total Grade' datatype='string' name='[social_distancing_total_grade]' role='dimension' type='nominal' />
            <column-instance column='[covid_19_confirmed_cases]' derivation='Sum' name='[sum:covid_19_confirmed_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0ac998u1tqfv3o162z9r70hm1664].[none:social_distancing_total_grade:nk]' direction='DESC' using='[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:covid_19_confirmed_cases:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ac998u1tqfv3o162z9r70hm1664].[sum:covid_19_confirmed_cases:qk]</rows>
        <cols>[federated.0ac998u1tqfv3o162z9r70hm1664].[none:social_distancing_total_grade:nk]</cols>
      </table>
      <simple-id uuid='{ABFF5454-529A-487F-B147-8E43A81BA80F}' />
    </worksheet>
    <worksheet name='virus vs cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='imputed-data' name='federated.0ac998u1tqfv3o162z9r70hm1664' />
          </datasources>
          <datasource-dependencies datasource='federated.0ac998u1tqfv3o162z9r70hm1664'>
            <column-instance column='[covid_19_confirmed_cases]' derivation='Avg' name='[avg:covid_19_confirmed_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[virus_pressure]' derivation='Avg' name='[avg:virus_pressure:qk]' pivot='key' type='quantitative' />
            <column caption='Covid 19 Confirmed Cases' datatype='real' name='[covid_19_confirmed_cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='Virus Pressure' datatype='real' name='[virus_pressure]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:virus_pressure:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:covid_19_confirmed_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ac998u1tqfv3o162z9r70hm1664].[avg:virus_pressure:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0ac998u1tqfv3o162z9r70hm1664].[avg:covid_19_confirmed_cases:qk] + [federated.0ac998u1tqfv3o162z9r70hm1664].[avg:virus_pressure:qk])</rows>
        <cols>[federated.0ac998u1tqfv3o162z9r70hm1664].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{DCBB7B8A-BC49-4124-BF99-AA4784B5D19B}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Top Populated States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{01D490BD-0D42-4F10-BCCB-82B7E396B8AD}' />
    </window>
    <window class='worksheet' name='social distance vs cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{ACC2F064-AA7D-44C7-ACD3-60910A1C749C}' />
    </window>
    <window class='worksheet' name='daily test vs cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FD272C34-5CEA-435D-B4CE-E87F50142E00}' />
    </window>
    <window class='worksheet' name='smoker vs death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1AC5FCF9-DC40-43B8-9E27-49FC7AD51331}' />
    </window>
    <window class='worksheet' name='smokers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BF07A9BE-A9FD-4605-ACC4-37F1036E020D}' />
    </window>
    <window class='worksheet' name='diabetes vs death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B173059A-CF9E-4C2D-A7D8-2DCEBC321D7C}' />
    </window>
    <window class='worksheet' maximized='true' name='diabetes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CA3C8736-BF18-4D7A-8540-87DCF391F234}' />
    </window>
    <window class='worksheet' name='death vs covid death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DF31CB67-1C89-46D7-960C-D1B882502C24}' />
    </window>
    <window class='worksheet' name='immigrant vs cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3DF599BE-5E33-409F-8FB5-3C1EC62AC839}' />
    </window>
    <window class='worksheet' name='GDP vs total population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ac998u1tqfv3o162z9r70hm1664].[none:state_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ac998u1tqfv3o162z9r70hm1664].[none:state_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B75E8B18-28DF-440F-AFD1-F4750E80CD03}' />
    </window>
    <window class='worksheet' name='virus vs cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ac998u1tqfv3o162z9r70hm1664].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F0F07DF5-50B6-4A2F-9909-AB586C0E0CAE}' />
    </window>
    <window class='worksheet' name='seasonal pattern'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{98D8F3F6-89CD-4D91-B237-10F87E62DF3E}' />
    </window>
    <window class='worksheet' name='cases vs vaccine'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{71526C28-5850-4C52-94D8-1DF65FF035EB}' />
    </window>
    <window class='worksheet' name='cases vs politics'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CE0B8253-A9B7-40E9-B999-69750A8739B7}' />
    </window>
    <window class='worksheet' name='religion vs cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{AEB7AA5A-CDA6-444B-9AFE-44225100AD31}' />
    </window>
    <window class='worksheet' name='mobility vs cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ac998u1tqfv3o162z9r70hm1664].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3FEF41B5-0E9B-4FBB-A550-F33B971F42F9}' />
    </window>
    <window class='worksheet' name='airport vs cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C007F6DA-A8B4-49F6-9E8C-F45E708DE718}' />
    </window>
    <window class='worksheet' name='passanger load'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8E8BFEE5-43AC-4951-8861-33F5EFD4AFEA}' />
    </window>
    <window class='worksheet' name='forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ac998u1tqfv3o162z9r70hm1664].[none:date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ac998u1tqfv3o162z9r70hm1664].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{86B93671-BD8C-4376-BA66-B233C92014E8}' />
    </window>
    <window class='worksheet' name='corr smoker vs death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ac998u1tqfv3o162z9r70hm1664].[none:Percent Of Smokers (bin):ok]</field>
            <field>[federated.0ac998u1tqfv3o162z9r70hm1664].[none:state_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AA63BB94-BCCD-402F-ACD8-9234646A8E9A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='GDP vs total population' width='192'>
      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
      qqm1rf1/r6c/tW67yggAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top Populated States' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='airport vs cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='cases vs politics' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='cases vs vaccine' width='192'>
      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
      NDQxBhAa2v8HZSy1yOtCB/gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='corr smoker vs death' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='daily test vs cases' width='192'>
      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
      U+P2AC5Nzf8PDeswtT9gl7UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='death vs covid death' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='diabetes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='diabetes vs death' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='forecast' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='immigrant vs cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='mobility vs cases' width='192'>
      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
      yGSqAQcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='passanger load' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='religion vs cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='seasonal pattern' width='192'>
      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
      f89iB8Wv4CPYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='smoker vs death' width='192'>
      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
      vvk6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='smokers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='social distance vs cases' width='192'>
      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
      vq9UFr8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='virus vs cases' width='192'>
      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
      SyUXBQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
